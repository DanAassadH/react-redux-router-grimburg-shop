{"version":3,"sources":["product/productReducer.js","product/filteredProductReducer.js","signIn/accountReducer.js","shoppingCart/shoppingCartReducer.js","app/reducers.js","signIn/clansReducer.js","common/dasherize.js","app/Authorised.jsx","app/UserProfile.jsx","shoppingCart/ShoppingCartIcon.jsx","app/Header.jsx","app/Masthead.jsx","product/ProductFilter.jsx","product/ProductImage.jsx","product/ProductCard.jsx","product/FeaturedProduct.jsx","product/ProductList.jsx","product/ProductStats.jsx","product/ProductDescription.jsx","product/ProductEffect.jsx","product/ProductAddCart.jsx","product/Product.jsx","common/comparableString.js","signIn/SignIn.jsx","shoppingCart/ShoppingCart.jsx","app/Nav.jsx","app/ScrollToTop.jsx","app/App.jsx","app/store.js","index.js"],"names":["LOAD","FILTER_MAGE","initialState","filter","sortby","products","roleFilter","role","x","potionFilter","category","trinketFilter","filterBy","type","payload","SIGN_IN","SIGN_OUT","AddOrMergeCartItem","state","item","oldItemIndex","findIndex","id","oldItem","slice","quantity","removeAll","combineReducers","action","filteredProducts","clans","member","funds","cart","updatedCart","removeOneItem","map","cartItem","addOneItem","value","replace","char","index","toLowerCase","useSelector","history","useHistory","useEffect","Object","keys","length","push","profile","useState","isOpen","setIsOpen","className","onClick","src","profileImg","alt","tabIndex","clan","window","location","href","icon","faSignOutAlt","props","to","credit","balance","reduce","acc","price","ShoppingCartIcon","UserProfile","children","ProductFilter","clicked","iconName","isActive","active","viewBox","xmlns","cx","cy","r","points","y","height","width","rarity","imgPath","path","name","product","ProductImage","image","values","featuredProduct1","featuredProduct2","description","dispatch","useDispatch","currentFilter","filterClicked","FeaturedProduct","key","ProductCard","stats","entries","iconMap","statMap","statClassMap","statName","statValue","style","Array","isArray","effect","productPrice","addToast","useToasts","count","setCount","setPrice","availableFunds","update","newCount","newPrice","appearance","autoDismiss","onAddToCartClick","useParams","quote","ProductDescription","ProductEffect","ProductStats","inputMemberName","setInputMemberName","inputClanName","setInputClanName","errorMessageUser","setMemberNameError","errorMessageClan","setClanNameError","bouncerPhrase","randomBouncerPhrase","Math","floor","random","clanList","findClan","clanName","comparableString","find","findMember","memberName","members","onSubmit","event","preventDefault","isUserInputValid","result","trim","validateUserInput","isCredentialsValid","memberProfile","validateCredentials","account","clanId","createAccountSignin","signIn","htmlFor","autoComplete","placeholder","onChange","e","target","autoFocus","productsInCart","notEnoughMoney","setNotEnoughtMoney","calcTotal","total","element","AddSingleItem","findPriceById","addOne","removeOne","readOnly","ScrollToTop","pathname","useLocation","scrollTo","placement","exact","component","SignIn","Header","Masthead","ProductList","Nav","Product","fetchEquipment","fetch","then","res","text","JSON","parse","fetchUtilities","fetchClans","mapProducts","dataset","current","productId","dasherize","Promise","all","rawData","preloadedState","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","configureStoreAsync","store","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.40608ef3.chunk.js","sourcesContent":["const LOAD = 'products/load'\r\n\r\nexport default (state={}, action) => {\r\n  switch(action.type) {\r\n    case LOAD:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Action\r\nexport const loadProducts = (data) => {\r\n  const mappedData =\r\n    data.reduce((state, current) => {\r\n      return state[current.name] = current;\r\n    }, {});\r\n\r\n  return {\r\n    type: LOAD,\r\n    payload: mappedData\r\n  }\r\n}\r\n\r\nexport const getAllProducts = () => {\r\n  return dispatch => {\r\n    fetch('../../data/equipment.json')\r\n      .then(res => res.text())\r\n      .then(res => JSON.parse(res))\r\n      .then(state => dispatch(loadProducts(state)))\r\n  }\r\n}\r\n","const FILTER_WARRIOR = 'filtered-products/warrior'\r\nconst FILTER_MAGE = 'filtered-products/mage'\r\nconst FILTER_ROGUE = 'filtered-products/rogue'\r\nconst FILTER_TRINKETS = 'filtered-products/trinkets'\r\nconst FILTER_POTIONS = 'filtered-products/potions'\r\n\r\nconst initialState = {\r\n  filter: 'warrior',\r\n  sortby: 'rarity',\r\n  products: [],\r\n}\r\n\r\nconst roleFilter = (role) =>  {\r\n  return x => { return x.role === role }\r\n}\r\n\r\nconst potionFilter = x => x.category === 'consumable';\r\n\r\nconst trinketFilter = x => x.category === 'artifact';\r\n\r\nexport default (state=initialState, action) => {\r\n  switch(action.type) {\r\n    case FILTER_WARRIOR:\r\n      return {...state, filter: \"warrior\", products: action.payload.filter(roleFilter(\"warrior\"))};\r\n\r\n    case FILTER_MAGE:\r\n      return {...state, filter: \"mage\", products: action.payload.filter(roleFilter(\"mage\"))};\r\n\r\n    case FILTER_ROGUE:\r\n      return {...state, filter: \"rogue\", products: action.payload.filter(roleFilter(\"rogue\"))};\r\n\r\n    case FILTER_POTIONS:\r\n      return {...state, filter: \"potions\", products: action.payload.filter(potionFilter)};\r\n\r\n    case FILTER_TRINKETS:\r\n      return {...state, filter: \"trinkets\", products: action.payload.filter(trinketFilter)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Action\r\nexport const filterBy = (filter, products) => {\r\n  let type = '';\r\n  switch(filter) {\r\n    case 'warrior':\r\n      type = FILTER_WARRIOR;\r\n      break;\r\n    case 'mage':\r\n      type = FILTER_MAGE;\r\n      break;\r\n    case 'rogue':\r\n      type = FILTER_ROGUE;\r\n      break;\r\n    case 'potions':\r\n      type = FILTER_POTIONS;\r\n      break;\r\n    case 'trinkets':\r\n      type = FILTER_TRINKETS;\r\n      break;\r\n    default:\r\n      type = '';\r\n  }\r\n\r\n  return {\r\n    type: type,\r\n    payload: products\r\n  }\r\n}\r\n","const SIGN_IN = \"account/sign-in\";\r\nconst SIGN_OUT = \"account/sign-out\";\r\nconst DEDUCT_FUNDS = \"account/deduct-funds\";\r\n\r\n/**\r\n * Account Reducer\r\n */\r\nexport default (state={}, action) => {\r\n  switch(action.type) {\r\n\r\n    case SIGN_IN:\r\n      return action.payload;\r\n\r\n    case SIGN_OUT:\r\n      return {};\r\n\r\n    case DEDUCT_FUNDS:\r\n      return {...state, funds: state.funds - action.payload};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n/**\r\n * Signs in the account with the given account object\r\n *\r\n * @param {object} account - User account that is to be signed in\r\n * @param {string} account.clanId - Dasherized identifier of the signed in clan\r\n * @param {string} account.memberName - Name of the signed in member\r\n * @param {number} account.funds - Amount of funds available to the clan\r\n * @param {string} account.profileImg - Name of the members profile image.\r\n */\r\nexport const signIn = (account) => {\r\n  return {\r\n    type: SIGN_IN,\r\n    payload: account\r\n  };\r\n}\r\n\r\n/**\r\n * Signs out the current user causing the signin page to load\r\n * and be required.\r\n */\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGN_OUT\r\n  };\r\n}\r\n\r\n/**\r\n * Removes funds out of a members account.\r\n * @param {number} amount - Amount of money to deduct\r\n */\r\nexport const deductFunds = (amount) => {\r\n  return {\r\n    type: DEDUCT_FUNDS,\r\n    payload: amount\r\n  };\r\n}\r\n","//https://www.thetopsites.net/article/53766463.shtml\r\n\r\nfunction AddOrMergeCartItem(state, item) {\r\n  const oldItemIndex = state.findIndex(x => x.id === item.id);\r\n  const oldItem = state[oldItemIndex];\r\n\r\n  let newState;\r\n  if(oldItemIndex !== -1) {\r\n    newState = [\r\n      ...state.slice(0, oldItemIndex),\r\n      {...item, quantity: oldItem.quantity + item.quantity},\r\n      ...state.slice(oldItemIndex+1),\r\n    ]\r\n  } else {\r\n    newState = [...state, item];\r\n  }\r\n  return newState;\r\n}\r\n\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ADD\":\r\n      return AddOrMergeCartItem(state, action.payload);\r\n\r\n    case \"REMOVE_All\":\r\n      if(action.payload) {\r\n        const updatedCart = state.filter(\r\n          (item) => item.id !== action.payload\r\n        );\r\n        return updatedCart;\r\n      }else {\r\n        return [];\r\n      }\r\n\r\n\r\n    case \"REMOVE_ONE\":\r\n      const removeOneItem = state.map((cartItem)=>{\r\n        if((cartItem.id === action.payload)&&(cartItem.quantity>0) ){\r\n            cartItem.quantity -- ;\r\n        }\r\n        return cartItem;\r\n     });\r\n      return removeOneItem;\r\n\r\n      case \"ADD_ONE\":\r\n        const addOneItem = state.map((cartItem)=>{\r\n          if(cartItem.id === action.payload ){\r\n              cartItem.quantity ++;\r\n          }\r\n          return cartItem;\r\n       });\r\n        return addOneItem;\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//actions\r\n\r\nexport const addToCart = (data) => {\r\n  return {\r\n    type: \"ADD\",\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const removeAll = (id) => {\r\n  return {\r\n    type: \"REMOVE_All\",\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const removeOne = (id) => {\r\n  return {\r\n    type: \"REMOVE_ONE\",\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const addOne = (id) => {\r\n  return {\r\n    type: \"ADD_ONE\",\r\n    payload: id,\r\n  };\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport productReducer from '../product/productReducer';\r\nimport filteredProductReducer from '../product/filteredProductReducer';\r\nimport clansReducer from '../signIn/clansReducer';\r\nimport accountReducer from '../signIn/accountReducer';\r\nimport shoppingCartReducer from '../shoppingCart/shoppingCartReducer'\r\n\r\nexport default combineReducers({\r\n  products: productReducer,\r\n  filteredProducts: filteredProductReducer,\r\n  clans: clansReducer,\r\n  member: accountReducer,\r\n  cart: shoppingCartReducer\r\n})\r\n","// This reducer does nothing except provide access to the clan\r\n// data that gets popluated on load\r\n\r\nexport default (state={}, action) => {\r\n  switch(action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","// Citation: (dasherize)\r\n// https://coderwall.com/p/hpq7sq/undescorize-dasherize-capitalize-string-prototype\r\n//\r\n// Looked up a clean example of handling the first character as an uppercase character\r\n// problem. Wasn't exactly sure how to handle that cleanly.\r\n// -Aaron\r\n\r\n/**\r\n * Returns new string with all whitespace removed and all capital\r\n * letters replaced with a dash followed by the lower case version of\r\n * the character.\r\n *\r\n * @param {String} value The string value that you want to dasherize\r\n * @return {String}      Dasherized string.\r\n */\r\nexport default (value) => {\r\n  return value\r\n    .replace(/\\W/g, '')\r\n    .replace(/[A-Z]/g, (char, index) => {\r\n      return (index !== 0 ? '-' : '') + char.toLowerCase();\r\n    });\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n/**\r\n * Validates that there is a signed in profile otherwise redirect to the signing page.\r\n */\r\nexport default () => {\r\n  const member = useSelector(state => state.member);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if(!member || Object.keys(member).length === 0) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [member, history]);\r\n\r\n  return null;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport './css/user-profile.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default () => {\r\n  const profile = useSelector(state => state.member);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const signout = () => {\r\n    window.location.href = '/';\r\n  }\r\n\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <div className=\"user-account dropdown__button\" onClick={() => setIsOpen(true)}>\r\n        <img src={`/imgs/profiles/${profile.profileImg}`} alt=\"User profile avatar\"/>\r\n      </div>\r\n\r\n      { isOpen &&\r\n        <div\r\n          onClick={() => setIsOpen(false)}\r\n          className=\"dropdown__closer\"\r\n          tabIndex=\"-1\"\r\n        ></div>\r\n      }\r\n\r\n      { isOpen &&\r\n        <div className=\"dropdown__menu\">\r\n          <p>{profile.member}</p>\r\n          <p>{profile.clan}</p>\r\n          <button onClick={() => signout()}>Sign-out <FontAwesomeIcon icon={faSignOutAlt} />\r\n          </button>\r\n        </div>\r\n      }\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport './css/cart-icon.css'\r\n\r\nexport default (props) => {\r\n  const quantity = useSelector(state => state.cart.length)\r\n\r\n  return (\r\n    <div className=\"cart-icon__container\">\r\n      <Link to=\"/checkout\">\r\n      { quantity > 0 &&\r\n        <div className=\"cart-icon__quantity\">\r\n          <span>{quantity}</span>\r\n        </div>\r\n      }\r\n        <img src=\"/imgs/cart.svg\" alt=\"Shopping Cart\"/>\r\n        <span>Cart</span>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport UserProfile from './UserProfile'\r\nimport ShoppingCartIcon from '../shoppingCart/ShoppingCartIcon'\r\n\r\nimport './css/header.css';\r\n\r\nexport default () => {\r\n  const credit = useSelector(state => state.member.funds);\r\n  const cart = useSelector(state => state.cart);\r\n\r\n  const balance = cart.reduce((acc, x)=> {\r\n    return acc + (x.price * x.quantity);\r\n  }, 0)\r\n\r\n  return (\r\n    <header className=\"main-header container\">\r\n      <div className=\"header-group\">\r\n        <ShoppingCartIcon />\r\n        <div className=\"total-credit\">\r\n          <img src='/imgs/balance-icon.svg' alt=\"Balance Icon\" />\r\n          <p>{balance}</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/**\r\n        * Accessibility Citation\r\n        * https://stackoverflow.com/questions/665037/replacing-h1-text-with-a-logo-image-best-method-for-seo-and-accessibility\r\n        */}\r\n      <h1 className=\"shop-sign\">\r\n        <Link to=\"/products\">\r\n          <img src=\"/imgs/shop-logo.png\" alt=\"Grimburg's Shop of Armour &amp; Potions\"/>\r\n        </Link>\r\n      </h1>\r\n\r\n      <div className=\"header-group\">\r\n        <div className=\"total-credit\">\r\n          <img src='/imgs/gold.svg'alt=\"Gold Icon\"/>\r\n          <p>{credit}</p>\r\n        </div>\r\n        <UserProfile />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport './css/masthead.css'\r\n\r\nexport default (props) => {\r\n  const className = props.className || '';\r\n\r\n  return (\r\n    <div className={`masthead ${className} container`}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./css/ProductFilter.css\";\r\n\r\n// FOR SVG https://www.w3schools.com/html/html5_svg.asp\r\n// Scale SVG https://css-tricks.com/scale-svg/\r\n//Put image inside SVG https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/SVG_Image_Tag\r\n\r\nfunction ProductFilter(props) {\r\n  const filter = props.filter     || '';\r\n  const clicked = props.clicked;\r\n  const iconName = props.iconName || '';\r\n  const isActive = props.active && 'active';\r\n\r\n\r\n  return (\r\n    <div className={`product-filter-container ${isActive}`} onClick={() => { clicked(filter) } }>\r\n      <svg\r\n        className=\"svg-filter-button\"\r\n        viewBox=\"0 0 80 80\"\r\n        xmlns=\"http://www.w3.org/2000/svg\">\r\n\r\n        <circle className=\"out-circle\" cx=\"40\" cy=\"40\" r=\"38\" />\r\n        <circle className=\"in-circle\" cx=\"40\" cy=\"40\" r=\"34\" />\r\n        <polygon className=\"up-triangle\" points=\" 40,13 36,5 44,5 \" />\r\n        <polygon className=\"up-triangle\" points=\" 40,67 36,75 44,75 \" />\r\n\r\n        <image href={`/imgs/filter-icons/${iconName}`} x=\"17\" y=\"17\" height=\"45px\" width=\"45px\" />\r\n      </svg>\r\n\r\n      <p className=\"filter-string\">{filter}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductFilter;\r\n","import React from 'react';\r\nimport './css/product-image.css'\r\n\r\nexport default ( props ) => {\r\n    const className = props.className || '';\r\n\r\n    const rarity = props.rarity;\r\n    const imgPath = `/imgs/products/${props.path}`;\r\n    const name =  props.name;\r\n\r\n    return (\r\n        <div className={`product__image ${rarity.toLowerCase()} ${className}`}>\r\n            <div className=\"product__image-rarity\">\r\n                <p>{rarity}</p>\r\n            </div>\r\n            <img src={imgPath} alt={`${name}`}/>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport ProductImage from './ProductImage';\r\n\r\nimport './css/product-image.css'\r\nimport './css/product-list.css';\r\n\r\n\r\nexport default (props) => {\r\n    const product = props.product\r\n\r\n    return (\r\n      <article className=\"product-card\">\r\n        <Link to={`/products/${product.id}`}>\r\n            <ProductImage path={product.image} rarity={product.rarity} name={product.name} />\r\n            <div className=\"item-name\">\r\n              <h2>{product.name}</h2>\r\n            </div>\r\n        </Link>\r\n      </article>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ProductImage from './ProductImage';\r\n\r\nimport './css/featured-product.css';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default () => {\r\n    const products = useSelector(state => Object.values(state.products));\r\n\r\n    const featuredProduct1 = products[16];\r\n    const featuredProduct2 = products[24];\r\n\r\n    return (\r\n        <div className=\"featured-items\">\r\n        <article className=\"featured-item\">\r\n          <Link to={`/products/${featuredProduct1.id}`}>\r\n              <ProductImage className=\"featured-item__img\" path={featuredProduct1.image} rarity={featuredProduct1.rarity} name={featuredProduct1.name} />\r\n              <div className=\"featured-item__description\">\r\n                <h2>{featuredProduct1.name}</h2>\r\n                <p>{featuredProduct1.description}</p>\r\n              </div>\r\n          </Link>\r\n        </article>\r\n        <article className=\"featured-item\">\r\n          <Link to={`/products/${featuredProduct2.id}`}>\r\n              <ProductImage className=\"featured-item__img\" path={featuredProduct2.image} rarity={featuredProduct2.rarity} name={featuredProduct2.name} />\r\n              <div className=\"featured-item__description\">\r\n                <h2>{featuredProduct2.name}</h2>\r\n                <p>{featuredProduct2.description}</p>\r\n              </div>\r\n          </Link>\r\n        </article>\r\n      </div>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { filterBy } from './filteredProductReducer';\r\nimport FilterButton from './ProductFilter';\r\nimport ProductCard from './ProductCard';\r\n\r\nimport './css/product-list.css';\r\n\r\nimport FeaturedProduct from './FeaturedProduct';\r\n\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const products = useSelector(state => Object.values(state.products));\r\n\r\n  const filteredProducts = useSelector(state => state.filteredProducts.products);\r\n  const currentFilter = useSelector(state => state.filteredProducts.filter);\r\n\r\n  const filterButtons = [\r\n    { filter: 'warrior',  icon: 'helmet1.svg' },\r\n    { filter: 'mage',     icon: 'witch-hat.svg' },\r\n    { filter: 'rogue',    icon: 'dagger.svg' },\r\n    { filter: 'trinkets', icon: 'ring.svg' },\r\n    { filter: 'potions',  icon: 'poison.svg' },\r\n  ]\r\n\r\n  const filterClicked = (filter) => {\r\n    dispatch(filterBy(filter, products))\r\n  }\r\n\r\n  // We want this effect to only run once so that redux\r\n  // gets an initial set of products.\r\n  // There has to be a better way.\r\n  useEffect(() => {\r\n    if(filteredProducts.length === 0) {\r\n      dispatch(filterBy(\"warrior\", products))\r\n    }\r\n     //Very strange, requirement just to stop an eslint warning\r\n  }, [dispatch, filteredProducts.length, products])\r\n\r\n  return ( \r\n    <main className=\"products container\">\r\n      <h1>Featured Items</h1>\r\n\r\n      <FeaturedProduct />\r\n\r\n      <div className=\"product-filters\">\r\n        {\r\n          filterButtons.map(({filter, icon}) => {\r\n            return (<FilterButton key={filter} filter={filter} clicked={filterClicked} iconName={icon} active={filter === currentFilter} />)\r\n          })\r\n        }\r\n      </div>\r\n      \r\n      <div className=\"product-list\">\r\n        {\r\n          filteredProducts.map((product, index) => {\r\n            return <ProductCard product={product} key={index}/>\r\n          })\r\n        }\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './css/product-stats.css';\r\n\r\n\r\nexport default (props) => {\r\n  if(!props.stats || props.stats.length === 0) {\r\n    // Don't display an empty stat block.\r\n    return (null);\r\n  }\r\n\r\n  const className = props.className || '';\r\n\r\n  //\r\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries\r\n  //\r\n  // Using Object.entries we can get a list of all the properties and their values\r\n  // in array form eg [ [\"HP\", 21], [\"MP\", 4] ]\r\n  // then using Array.filter and a bit of array destructuring magic\r\n  // we can filter out all values that are 0.\r\n  const stats = Object\r\n                  .entries(props.stats)\r\n                  .filter(([_, value]) => value !== 0);\r\n\r\n  const iconMap = {\r\n    \"HP\": \"heart.svg\",\r\n    \"MP\": \"magic.svg\",\r\n    \"ATK\": \"attack.svg\",\r\n    \"DEF\": \"defense.svg\",\r\n    \"MATK\": \"magic-attack.svg\",\r\n    \"MDEF\": \"magic-defense.svg\",\r\n    \"SPD\": \"speed.svg\",\r\n    \"EVA\": \"evasion.svg\",\r\n    \"ACC\": \"accuracy.svg\",\r\n    \"CRT\": \"critical.svg\",\r\n  }\r\n\r\n  const statMap = {\r\n    \"HP\": \"Health Points (HP)\",\r\n    \"MP\": \"Magic Points (MP)\",\r\n    \"ATK\": \"Attack (ATK)\",\r\n    \"DEF\": \"Defense (DEF)\",\r\n    \"MATK\": \"Magic Attack (MATK)\",\r\n    \"MDEF\": \"Magic Defense (MDEF)\",\r\n    \"SPD\": \"Speed (SPD)\",\r\n    \"EVA\": \"Evasion (EVA)\",\r\n    \"ACC\": \"Accuracy (ACC)\",\r\n    \"CRT\": \"Critical (CRT)\",\r\n  }\r\n\r\n  const statClassMap = {\r\n    \"HP\":   \"stat-hp\",\r\n    \"MP\":   \"stat-mp\",\r\n    \"ATK\":  \"stat-atk\",\r\n    \"DEF\":  \"stat-def\",\r\n    \"MATK\": \"stat-matk\",\r\n    \"MDEF\": \"stat-mdef\",\r\n    \"SPD\":  \"stat-spd\",\r\n    \"EVA\":  \"stat-eva\",\r\n    \"ACC\":  \"stat-acc\",\r\n    \"CRT\":  \"stat-crt\",\r\n  }\r\n\r\n  return (\r\n    <div className={`product-stats ${className}`}>\r\n      <h3>Stats</h3>\r\n      {stats.map(([statName, statValue], index) => {\r\n        return (\r\n          <div key={index} className={`${statClassMap[statName]} product-stat`}>\r\n            <p className=\"product-stat__name\">\r\n              <img src={`/imgs/stat-icons/${iconMap[statName]}`} alt=\"Stat icon\" />\r\n              { statMap[statName] }\r\n            </p>\r\n\r\n            <div className=\"full-bar\">\r\n              <span className=\"stat-bar-filled\" style={{width:`${statValue}%`}}>\r\n                  {statValue}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default (props) => {\r\n    const className = props.className || '';\r\n\r\n    // Check if props.decription is an array, if it is\r\n    // then use it as the description otherwise assume\r\n    // props.description is just a string so wrap it in an\r\n    // array so that we only have to handle one type of\r\n    // data in our render phase.\r\n    const description = Array.isArray(props.description)\r\n                            ? props.description : [props.description];\r\n\r\n    if(!props.description || props.description === '') {\r\n        // The description property is either null, undefined,\r\n        // or an empty string and therefore we should not display\r\n        // this component at all.\r\n        return ( null );\r\n    }\r\n\r\n    return (\r\n        <div className={`product__description ${className}`}>\r\n            <h3>Description</h3>\r\n            {\r\n                description.map((description, index) => {\r\n                    return (<p key={index}>{description}</p>);\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport default (props) => {\r\n    const className = props.className || '';\r\n\r\n    // Check if props.effect is an array, if it is\r\n    // then use it as the effect otherwise assume\r\n    // props.effect is just a string so wrap it in an\r\n    // array so that we only have to handle one type of\r\n    // data in our render phase.\r\n    const effect = Array.isArray(props.effect)\r\n                            ? props.effect : [props.effect];\r\n\r\n    if(!props.effect || props.effect === '') {\r\n        // The effect property is either null, undefined,\r\n        // or an empty string and therefore we should not display\r\n        // this component at all.\r\n        return ( null );\r\n    }\r\n\r\n    return (\r\n        <div className={`product__effect ${className}`}>\r\n            <h3>Effect</h3>\r\n            {\r\n                effect.map((effect, index) => {\r\n                    return (<p key={index}>{effect}</p>);\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch} from \"react-redux\";\r\nimport { addToCart } from \"../shoppingCart/shoppingCartReducer\";\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nimport \"./css/product-addcart.css\";\r\n\r\n\r\nexport default (props) => {\r\n  const productPrice = props.product.price;\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { addToast } = useToasts();\r\n\r\n  const [count, setCount] = useState(1);\r\n  const [price, setPrice] = useState(productPrice);\r\n  const availableFunds = useSelector(state => state.member.funds);\r\n  const cart = useSelector(state => state.cart);\r\n\r\n  const update = (action) => {\r\n    let newCount = 0;\r\n    let newPrice = 0;\r\n\r\n    switch (action) {\r\n      case \"+\":\r\n        if (count !== 0) {\r\n          newCount = count + 1;\r\n          newPrice = newCount * productPrice;\r\n        }\r\n        break;\r\n      case \"-\":\r\n        if (count !== 1) {\r\n        newCount = count - 1;\r\n        newPrice = newCount * productPrice;\r\n        }\r\n        else {\r\n          newCount = count;\r\n          newPrice = newCount * productPrice;\r\n        }\r\n        break;\r\n      default:\r\n        // Added to satisfy ESLint\r\n    }\r\n\r\n    setCount(newCount);\r\n    setPrice(newPrice);\r\n  };\r\n\r\n  const onAddToCartClick = () => {\r\n    const currentBalance = cart.reduce((acc, item) => {\r\n      return acc += item.price * item.quantity;\r\n    }, 0);\r\n\r\n    const newBalance = currentBalance + (props.product.price * count);\r\n    if (newBalance <= availableFunds) {\r\n      const cartItem = {\r\n        id: props.product.id,\r\n        rarity: props.product.rarity,\r\n        price: props.product.price,\r\n        name: props.product.name,\r\n        image: props.product.image,\r\n        quantity: count,\r\n      }\r\n      dispatch(addToCart(cartItem));\r\n      history.push(\"/products\");\r\n\r\n    } else {\r\n      addToast(\"Not enough funds to purchase this item\", {appearance: 'error', autoDismiss: true})\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-cart\">\r\n      <div className=\"add-cart__counter\">\r\n        <button className=\"add-cart__counter--downtick\" onClick={() => update(\"-\")}> - </button>\r\n        <p>{count}</p>\r\n        <button className=\"add-cart__counter--uptick\" onClick={() => update(\"+\")}> + </button>\r\n      </div>\r\n\r\n      <div className=\"add-cart__price\">\r\n        <img src='/imgs/gold.svg' alt=\"Gold Coins\"/>\r\n        <p>{price}</p>\r\n      </div>\r\n\r\n      <button className=\"add-cart__button\"\r\n              onClick={() => onAddToCartClick()}>\r\n        <img src='/imgs/cart.svg' alt=\"Shopping Cart\"/>\r\n        ADD TO CART\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport \"./css/product.css\"\r\nimport ProductImage from './ProductImage';\r\nimport ProductStats from './ProductStats';\r\nimport ProductDescription from './ProductDescription';\r\nimport ProductEffect from './ProductEffect';\r\nimport ProductAddToCart from './ProductAddCart';\r\n\r\n\r\nexport default () => {\r\n  const { id } = useParams();\r\n  const product = useSelector(state => state.products[id])\r\n\r\n  return (\r\n    <main className=\"product-detail container\">\r\n      <div className=\"product-image-container\">\r\n      <ProductImage rarity={product.rarity} path={product.image} />\r\n      </div>\r\n\r\n      <header>\r\n        <h2 className=\"product__name\">{product.name}</h2>\r\n        <p className=\"product__role\">{product.role}</p>\r\n      </header>\r\n\r\n      <ProductAddToCart product={product} />\r\n\r\n      <div className=\"product__quote\">\r\n        <p>{product.quote}</p>\r\n      </div>\r\n\r\n      <div className=\"flex-row\">\r\n        <ProductDescription className=\"w-50\" description={product.description} />\r\n        <div className=\"w-50\">\r\n          <ProductEffect effect={product.effect} />\r\n          <ProductStats stats={product.stats} />\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","/**\r\n * Creates a string will all whitespace removed and converted to\r\n * lowercase.\r\n *\r\n * @note The primary usecase for this method is during signin.\r\n *       We want to be able to be more liberal in accepting clan\r\n *       and member names. Spaces should should not matter.\r\n *\r\n * @param {string} value - The string to convet.\r\n */\r\nexport default (value) => {\r\n  value = value || '';\r\n  return value\r\n          .replace(/\\W/g, '') // Remove all whitespace\r\n          .toLowerCase(); // Make the string lowercase\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport comparableString from '../common/comparableString.js'\r\n\r\nimport { signIn } from \"./accountReducer\";\r\n\r\nimport \"./SignIn.css\";\r\n\r\n/**\r\n * SPECIAL NOTICE:\r\n *\r\n * There is no actual security here and there are numerous ways to bypass\r\n * this 'login' page. It's purely included in the project to simulate a type of\r\n * restriction page while grabbing data from redux. In a real project an authorization\r\n * token would be obtained from the remote backend where it would be used to authorize\r\n * each and every server query then after.\r\n */\r\n\r\nexport default (props) => {\r\n  const dispatch = useDispatch();\r\n  const [inputMemberName, setInputMemberName] = useState(\"\");\r\n  const [inputClanName, setInputClanName] = useState(\"\");\r\n  const [errorMessageUser, setMemberNameError] = useState(\"\");\r\n  const [errorMessageClan, setClanNameError] = useState(\"\");\r\n\r\n  const bouncerPhrase = [\"Clan members only...\", \"You on the list?\", \"No mask, no flask\", \"You got the coin?\", \"Beat it Tombdweller\", \"Get lost Sapblood\", \"Keep on walking halfling\", \"Take a hike Ankle-biter\"]\r\n  const randomBouncerPhrase = bouncerPhrase[Math.floor(Math.random() * bouncerPhrase.length)];\r\n\r\n  const clanList = useSelector((state) => state.clans);\r\n\r\n\r\n  /**\r\n   * Finds a clan in our preloaded clan list.\r\n   *\r\n   * @param {string} clanName - The clan name to search for\r\n   * @returns {(null|object)} returns null or the clan object\r\n   */\r\n  function findClan(clanName) {\r\n    clanName = comparableString(clanName) || ''\r\n    return clanList.find(x => comparableString(x.clan) === clanName);\r\n  }\r\n\r\n  /**\r\n   * Finds a member profile in the given clan.\r\n   *\r\n   * @param {object} clan - clan object from our preloaded clan list.\r\n   * @param {string} memberName - A member name from that clan.\r\n   * @returns {(null|object)} returns null or the profile object\r\n   */\r\n  const findMember = (clan, memberName) => {\r\n    memberName = comparableString(memberName) || ''\r\n\r\n    return clan.members.find(\r\n      x => comparableString(x.member) === memberName\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Clears all errors on the form.\r\n   */\r\n  const clearErrors = () => {\r\n    setMemberNameError(\"\");\r\n    setClanNameError(\"\");\r\n  }\r\n\r\n  /**\r\n   * Validates that the user gave us some kind of input\r\n   *\r\n   * @returns {bool} True when input is valid otherwise false.\r\n   */\r\n  const validateUserInput = () => {\r\n    let result = true;\r\n    if(inputClanName.trim() === \"\") {\r\n      result = false;\r\n      setClanNameError(\"What clan are you from?\");\r\n    }\r\n\r\n    if(inputMemberName.trim() === \"\") {\r\n      result = false;\r\n      setMemberNameError(\"What's your name?\");\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Determines if the user entered credentials are valid\r\n   *\r\n   * @returns {bool} True if credentials are valid otherwise false\r\n   *                 with error messages added to the appropriate message\r\n   *                 state.\r\n   */\r\n  const validateCredentials = () => {\r\n    const clan = findClan(inputClanName);\r\n\r\n    let result = true;\r\n    if(clan) {\r\n      const memberProfile = findMember(clan, inputMemberName);\r\n      if(memberProfile && memberProfile.member !== null) {\r\n        result = true;\r\n      } else {\r\n        result = false;\r\n        setMemberNameError(\"You're name is not in the list. Scram!\");\r\n      }\r\n\r\n    } else {\r\n      result = false;\r\n      setClanNameError(\"Never heard of that clan before...\");\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Creates the account details needed to \"sign-in\" a user\r\n   * to the store.\r\n   *\r\n   * This function expects the credentials to have already been validated before\r\n   * being called.\r\n   *\r\n   * @param {string} clanName - The clan name.\r\n   * @param {string} memberName - Clan member name.\r\n   */\r\n  const createAccountSignin = (clanName, memberName) => {\r\n    // Note: This should probably be pulled out into some other file\r\n    //       closer to redux. However since we know the scope of this app\r\n    //       and this is the only place that will be setting logged in profiles\r\n    //       it's probably safe to leave this here.\r\n\r\n    const clan = findClan(clanName);\r\n    const memberProfile = findMember(clan, memberName);\r\n\r\n    return { clanId: clan.clanId, clan: clan.clan, ...memberProfile }\r\n  }\r\n\r\n  /**\r\n   * Validates the inputed user credentials and\r\n   * if the user can \"sign-in\", create the account object\r\n   * then redirect to the sites main page.\r\n   *\r\n   * @param {Event} event Data from the onSumbitEvent\r\n   */\r\n  const onSumbit = (event) => {\r\n    event.preventDefault();\r\n\r\n    clearErrors();\r\n\r\n    const isUserInputValid = validateUserInput();\r\n    const isCredentialsValid = validateCredentials();\r\n    const canSignIn = isUserInputValid && isCredentialsValid;\r\n\r\n    if(canSignIn) {\r\n      const account = createAccountSignin(inputClanName, inputMemberName);\r\n\r\n      // Sign in and transfer us to products\r\n      dispatch(signIn(account));\r\n      props.history.push(\"/products\");\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <header className=\"container signin__header\">\r\n      <h1>\r\n        <img src=\"/imgs/shop-logo.png\" alt=\"Grimburg's Armour &amp; Potions\"/>\r\n      </h1>\r\n    </header>\r\n\r\n    <main className=\"container signin__main\">\r\n      <form className=\"signin__form\" onSubmit={onSumbit}>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"clan-name\" />\r\n          <input\r\n            type=\"text\"\r\n            id=\"clan-name\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"Clan Name\"\r\n            onChange={(e) => {\r\n              setInputClanName(e.target.value);\r\n            }} />\r\n          <p className=\"show-error-message\">{errorMessageClan}</p>\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"user-name\" />\r\n          <input\r\n            type=\"text\"\r\n            id=\"user-name\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"Your Name\"\r\n            autoFocus\r\n            onChange={(e) => {\r\n              setInputMemberName(e.target.value);\r\n            }} />\r\n          <p className=\"show-error-message\">{errorMessageUser}</p>\r\n        </div>\r\n\r\n        <input type=\"submit\" value=\"Enter Shop\" />\r\n      </form>\r\n\r\n      <div className=\"signin__guard\">\r\n        <div className=\"signin__guard-container\">\r\n          <img src=\"/imgs/signin-boss.png\" alt=\"A large orc figure guards the shop entrance.\"/>\r\n        </div>\r\n        <p className=\"bubble bubble-bottom-left\">{randomBouncerPhrase}</p>\r\n      </div>\r\n    </main>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { removeOne, removeAll, addOne } from \"./shoppingCartReducer\";\r\nimport { deductFunds } from \"../signIn/accountReducer\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nimport ProductImage from \"../product/ProductImage\";\r\n\r\nimport \"./ShoppingCart.css\";\r\n\r\n//https://www.robinwieruch.de/javascript-map-array\r\n//https://www.robinwieruch.de/react-remove-item-from-list\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { addToast } = useToasts();\r\n\r\n  const productsInCart = useSelector((state) => Object.values(state.cart));\r\n  const availableFunds = useSelector((state) => state.member.funds);\r\n\r\n  const [notEnoughMoney, setNotEnoughtMoney] = useState(\"\");\r\n\r\n  const findPriceById = (id) => {\r\n    const item = productsInCart.find((x) => x.id === id);\r\n\r\n    return item ? item.price : 0;\r\n  };\r\n\r\n  const calcTotal = () => {\r\n    let total = 0;\r\n    for (const element of productsInCart) {\r\n      total += element.price * element.quantity;\r\n    }\r\n    return total;\r\n  };\r\n\r\n  const CheckOut = (event) => {\r\n    event.preventDefault();\r\n\r\n    let total = calcTotal();\r\n\r\n    if (total > availableFunds) {\r\n      setNotEnoughtMoney(\"You Do Not Have Enough Gold\");\r\n    } else {\r\n      dispatch(deductFunds(total));\r\n      dispatch(removeAll());\r\n      addToast(\"Thank you for your purchase!\", {\r\n        appearance: \"success\",\r\n        autoDismiss: true,\r\n      });\r\n      history.push(\"/products\");\r\n    }\r\n  };\r\n\r\n  // function to set cap on purchase\r\n  function AddSingleItem(id) {\r\n    let total = calcTotal() + findPriceById(id);\r\n    if (total < availableFunds) {\r\n      dispatch(addOne(id));\r\n    } else {\r\n      setNotEnoughtMoney(\"You Do Not Have Enough Gold\");\r\n    }\r\n  }\r\n\r\n  function RemoveSingleItem(id) {\r\n    setNotEnoughtMoney(\"\"); // clear error field\r\n    dispatch(removeOne(id));\r\n  }\r\n  function RemoveAllItem(id) {\r\n    setNotEnoughtMoney(\"\"); // clear error field\r\n    dispatch(removeAll(id));\r\n  }\r\n\r\n  if (productsInCart.length === 0) {\r\n    return (\r\n      <main className=\"checkout-page container\">\r\n        <p className=\"checkout-page__empty\">Your cart is empty, go back to the shop to continue shopping!</p>\r\n      </main>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <main className=\"checkout-page container\">\r\n      <h2>Order Summary</h2>\r\n      <ul>\r\n        {productsInCart.map((item) => {\r\n          return (\r\n            <li key={item.id} className=\"cart-item\">\r\n              <ProductImage\r\n                className=\"cart-item__img\"\r\n                rarity={item.rarity}\r\n                path={item.image}\r\n                name={item.name}\r\n              />\r\n              <p className=\"cart-item__name\">{item.name}</p>\r\n              <div className=\"cart-item__controls\">\r\n                <div>Unit Price: {item.price}</div>\r\n                <div>\r\n                  <div className=\"add-cart__counter\">\r\n                    <button\r\n                      className=\"add-cart__counter--downtick\"\r\n                      onClick={() => RemoveSingleItem(item.id)}\r\n                    >\r\n                      -\r\n                    </button>\r\n\r\n                    <p>{item.quantity}</p>\r\n                    <button\r\n                      className=\"add-cart__counter--uptick\"\r\n                      onClick={() => AddSingleItem(item.id)}\r\n                    >\r\n                      +\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <input\r\n                  className=\"add-cart__remove-button\"\r\n                  type=\"button\"\r\n                  value=\"Remove Item\"\r\n                  onClick={() => RemoveAllItem(item.id)}\r\n                />\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n\r\n      <p id=\"no-gold\">{notEnoughMoney}</p>\r\n      <ul id=\"sub-total\" className=\"add-cart__subtotal\">\r\n        <li>Total:</li>\r\n        <li>\r\n          <input type=\"text\" value={`${calcTotal()} g`} readOnly></input>\r\n        </li>\r\n      </ul>\r\n\r\n      <input type=\"submit\" value=\"Checkout\" onClick={CheckOut}></input>\r\n    </main>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './css/nav.css'\r\n\r\nexport default () => {\r\n\r\n    return (\r\n    <nav className=\"shop-nav\">\r\n        <Link to=\"/products\">\r\n        <div className=\"arrow-container\">\r\n            <p><i className=\"arrow left\"></i>Shop</p>\r\n        </div>\r\n        </Link>\r\n    </nav>\r\n    )\r\n}\r\n","/**\r\n * Citation:\r\n * https://reactrouter.com/web/guides/scroll-restoration\r\n *\r\n * Written by creators of React Router. Provides the tool\r\n * that forces the page to start at the top on react page\r\n * transitions.\r\n */\r\nimport { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from 'react';\r\nimport {\r\n  HashRouter,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom';\r\nimport { ToastProvider } from 'react-toast-notifications'\r\n\r\nimport Authorized from './Authorised';\r\nimport Header from './Header';\r\nimport Masthead from './Masthead';\r\nimport ProductList from '../product/ProductList';\r\nimport Product from '../product/Product';\r\nimport SignIn from '../signIn/SignIn';\r\nimport Cart from '../shoppingCart/ShoppingCart';\r\nimport Nav from './Nav';\r\nimport ScrollToTop from './ScrollToTop';\r\n\r\nexport default () => {\r\n  return(\r\n    <HashRouter>\r\n      <ScrollToTop />\r\n      <Switch>\r\n        <ToastProvider placement=\"top-right\">\r\n          <Route exact path=\"/\" component={SignIn} />\r\n          <Route exact path=\"/products\">\r\n            <Authorized />\r\n            <Header />\r\n            <Masthead className=\"masthead-products\"/>\r\n            <ProductList />\r\n          </Route>\r\n\r\n          <Route path=\"/products/:id\">\r\n            <Authorized />\r\n            <Header />\r\n            <Masthead className=\"masthead-product\">\r\n              <Nav />\r\n            </Masthead>\r\n            <Product/>\r\n          </Route>\r\n\r\n          <Route path=\"/checkout\">\r\n            <Authorized />\r\n            <Header />\r\n            <Masthead className=\"masthead-cart\">\r\n              <Nav />\r\n            </Masthead>\r\n            <Cart />\r\n          </Route>\r\n        </ToastProvider>\r\n      </Switch>\r\n    </HashRouter>\r\n  )\r\n}\r\n","import { createStore } from 'redux';\r\nimport rootReducer from './reducers';\r\nimport dasherize from '../common/dasherize';\r\n\r\nexport default () => {\r\n  const fetchEquipment = fetch('/data/equipment.json')\r\n                          .then(res => res.text())\r\n                          .then(res => JSON.parse(res));\r\n\r\n  const fetchUtilities = fetch('/data/utilities.json')\r\n                          .then(res => res.text())\r\n                          .then(res => JSON.parse(res));\r\n\r\n  const fetchClans = fetch('/data/clans.json')\r\n                        .then(res => res.text())\r\n                        .then(res => JSON.parse(res));\r\n\r\n\r\n  const mapProducts = (products, dataset) => {\r\n    return dataset.reduce(\r\n      (state, current) => {\r\n        // For each product in the dataset\r\n        // dasherize the product name\r\n        const productId = dasherize(current.name);\r\n\r\n        // then assign that dasherized name to the\r\n        // products id & as the key in the products redux\r\n        // store.\r\n        current.id = productId;\r\n        state[productId] = current;\r\n\r\n        return state;\r\n      },\r\n      products);\r\n  }\r\n\r\n  const mapClans = (dataset) => {\r\n    return dataset.map((clan) => {\r\n        // For each clan in the dataset\r\n        // dasherize the clan name and add it as\r\n        // the ID\r\n        clan.clanId = dasherize(clan.clan);\r\n        return clan;\r\n      },\r\n    );\r\n  }\r\n\r\n  return Promise\r\n    .all([fetchEquipment, fetchUtilities, fetchClans])\r\n    .then(rawData => {\r\n      let products = {};\r\n      let clans = [];\r\n\r\n      products = mapProducts(products, rawData[0]);\r\n      products = mapProducts(products, rawData[1]);\r\n      clans = mapClans(rawData[2]);\r\n\r\n      return {\r\n        clans: clans,\r\n        products: products\r\n      }\r\n    })\r\n    .then(preloadedState => {\r\n      return createStore(\r\n        rootReducer,\r\n        preloadedState,\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      )\r\n    })\r\n\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport configureStoreAsync from './app/store';\r\nimport './index.css';\r\nimport App from './app/App';\r\n\r\n\r\n// Citation:\r\n// https://stackoverflow.com/questions/37393176/redux-loading-initial-state-asynchronously\r\n//\r\n// The example given in the above link gave me the initial structure and idea for loading\r\n// our json data asyncronously which forced us to delay the creation of our store objects\r\n// which forced the delay of creating our react render hook.\r\n//\r\nconfigureStoreAsync()\r\n  .then(res => {\r\n    const store = res;\r\n\r\n    ReactDOM.render(\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>,\r\n      document.getElementById('root')\r\n    );\r\n  })\r\n"],"sourceRoot":""}